/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import entidades.Registro;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import logica.Logica;

/**
 *
 * @author Johan
 */
public class frmCalificaciones extends javax.swing.JFrame {

    /**
     * Creates new form frmCalificaciones
     */
    public frmCalificaciones() {
        initComponents();
        this.RefrescarTabla();
        this.seleccionarConElMouse();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombre = new javax.swing.JLabel();
        lblApellidos = new javax.swing.JLabel();
        lblProgramacion2 = new javax.swing.JLabel();
        lblCalculo = new javax.swing.JLabel();
        lblArte = new javax.swing.JLabel();
        lblAdministracion = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtProgramacion2 = new javax.swing.JTextField();
        txtCalculo = new javax.swing.JTextField();
        txtArte = new javax.swing.JTextField();
        txtAdministracion = new javax.swing.JTextField();
        btnEnviar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        btnConsultarCedula = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtPromedioNotas = new javax.swing.JTextField();
        btnActualizarRegistro = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        btnEliminarRegistro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dtRegistros = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblNombre.setText("Nombre:");

        lblApellidos.setText("Apellidos:");

        lblProgramacion2.setText("Programación 2:");

        lblCalculo.setText("Cálculo:");

        lblArte.setText("Arte:");

        lblAdministracion.setText("Administración:");

        btnEnviar.setText("Enviar notas");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        jLabel1.setText("Cedula:");

        txtCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaActionPerformed(evt);
            }
        });

        btnConsultarCedula.setText("Consultar cédula");
        btnConsultarCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarCedulaActionPerformed(evt);
            }
        });

        jLabel2.setText("Promedio de notas");

        txtPromedioNotas.setEditable(false);

        btnActualizarRegistro.setText("Actualizar registro");
        btnActualizarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarRegistroActionPerformed(evt);
            }
        });

        txtId.setEditable(false);

        btnEliminarRegistro.setText("Eliminar registro");
        btnEliminarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarRegistroActionPerformed(evt);
            }
        });

        dtRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Cédula", "Nombre", "Apellidos", "Programación II", "Cálculo", "Arte", "Administración", "Promedio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(dtRegistros);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAdministracion)
                            .addComponent(lblProgramacion2)
                            .addComponent(lblCalculo)
                            .addComponent(lblArte)
                            .addComponent(lblNombre)
                            .addComponent(lblApellidos)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtProgramacion2)
                            .addComponent(txtCalculo)
                            .addComponent(txtArte)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAdministracion)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtNombre)
                                                .addComponent(txtApellidos)
                                                .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPromedioNotas)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConsultarCedula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnActualizarRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNombre)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblApellidos)
                                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblProgramacion2)
                                    .addComponent(txtProgramacion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCalculo)
                                    .addComponent(txtCalculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(btnConsultarCedula)
                                .addGap(19, 19, 19)
                                .addComponent(btnActualizarRegistro)
                                .addGap(15, 15, 15)
                                .addComponent(btnEliminarRegistro)
                                .addGap(27, 27, 27)
                                .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblArte)
                            .addComponent(txtArte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAdministracion)
                            .addComponent(txtAdministracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtPromedioNotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        //Cuando el usuario le da click
        if (txtCedula.getText().isEmpty()||txtNombre.getText().isEmpty() || txtApellidos.getText().isEmpty() || txtProgramacion2.getText().isEmpty() || txtCalculo.getText().isEmpty() || txtArte.getText().isEmpty() || txtAdministracion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(new JFrame(), "Debe incluir todos los datos", "Datos faltantes", JOptionPane.WARNING_MESSAGE);
        } else {
//Todos los datos estan validados. Crear entidad.

//La entidad
            Registro miRegistro = new Registro(0, txtCedula.getText(), txtNombre.getText(), txtApellidos.getText(), Integer.parseInt(txtProgramacion2.getText()), Integer.parseInt(txtCalculo.getText()), Integer.parseInt(txtArte.getText()), Integer.parseInt(txtAdministracion.getText()));

            Logica capaDeLogica = new Logica(); //Instancia la logica
            if (capaDeLogica.crearRegistro(miRegistro)) { //Envio la entidad la logica
                JOptionPane.showMessageDialog(new JFrame(), "Registro ingresado con exito", "¡Registro exitoso!", JOptionPane.INFORMATION_MESSAGE);
                this.limpiarCampos();
this.RefrescarTabla();
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "Registro no ingresado con exito", "Error al ingresar", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEnviarActionPerformed
    
    private void limpiarCampos() {
        txtId.setText("");
        txtAdministracion.setText("");
        txtApellidos.setText("");
        txtArte.setText("");
        txtCalculo.setText("");
        txtCedula.setText("");
        txtNombre.setText("");
        txtProgramacion2.setText("");
        txtPromedioNotas.setText("");
    }

    private void seleccionarConElMouse() {
        dtRegistros.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent clickDelUsuario) {

                if (clickDelUsuario.getID() == MouseEvent.MOUSE_ENTERED) {
                    return;
                }
                JTable miTabla = (JTable) clickDelUsuario.getSource();
                Point elPuntoDondeDioClick = clickDelUsuario.getPoint();

                if (clickDelUsuario.getClickCount() == 1) {
                    txtId.setText(dtRegistros.getValueAt(dtRegistros.getSelectedRow(), 0).toString());
                    txtCedula.setText(dtRegistros.getValueAt(dtRegistros.getSelectedRow(), 1).toString());
                    txtNombre.setText(dtRegistros.getValueAt(dtRegistros.getSelectedRow(), 2).toString());
                    txtApellidos.setText(dtRegistros.getValueAt(dtRegistros.getSelectedRow(), 3).toString());
                    txtProgramacion2.setText(dtRegistros.getValueAt(dtRegistros.getSelectedRow(), 4).toString());
                    txtCalculo.setText(dtRegistros.getValueAt(dtRegistros.getSelectedRow(), 5).toString());
                    txtArte.setText(dtRegistros.getValueAt(dtRegistros.getSelectedRow(), 6).toString());
                    txtAdministracion.setText(dtRegistros.getValueAt(dtRegistros.getSelectedRow(), 7).toString());

                }
            }
        });

    }

private TableModel CompletarTableModel() {
        try {
            Logica laCapaDeLogica = new Logica();
            List<Registro> miListaDeRegistros = laCapaDeLogica.traerTodosLosRegistros();
            Object[] columnas = new Object[]{"id", "Cédula", "Nombre", "Apellidos", "Programación II", "Cálculo", "Arte", "Administración","Promedio"};
            Object[][] datos = new Object[miListaDeRegistros.size()][columnas.length];
            for (int i = 0; i < miListaDeRegistros.size(); i++) {
                datos[i][0] = miListaDeRegistros.get(i).getId();
                datos[i][1] = miListaDeRegistros.get(i).getCedula();
                datos[i][2] = miListaDeRegistros.get(i).getNombre();
                datos[i][3] = miListaDeRegistros.get(i).getApellidos();
                datos[i][4] = miListaDeRegistros.get(i).getProgramacion2();
                datos[i][5] = miListaDeRegistros.get(i).getCalculo();
                datos[i][6] = miListaDeRegistros.get(i).getArte();
                datos[i][7] = miListaDeRegistros.get(i).getAdministracion();
                datos[i][8] = miListaDeRegistros.get(i).getPromedio();

            }
            DefaultTableModel model = new DefaultTableModel(datos, columnas);
            return model;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "La tabla no se cargo correctamente", null, 1);
        }
        return null;
    }

    private void RefrescarTabla() {
        TableModel tablaModel = this.CompletarTableModel();
        dtRegistros.setModel(tablaModel);
    }

    private void txtCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaActionPerformed

    private void btnConsultarCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarCedulaActionPerformed
        if (txtCedula.getText().isEmpty()) {
            JOptionPane.showMessageDialog(new JFrame(), "Ingrese la cédula a consultar", "Consultar cédula", JOptionPane.WARNING_MESSAGE);
            this.limpiarCampos();
        } else {
//Enviar a logica;
            Logica capaDeLogica = new Logica(); //Instancia la logica
            Registro elRegistro = new Registro();


            elRegistro = capaDeLogica.consultarPorCedula(txtCedula.getText());

            if (elRegistro == null) {
                JOptionPane.showMessageDialog(new JFrame(), "La cedula " + txtCedula.getText() + " no tiene registros", "Cedula sin registros", JOptionPane.WARNING_MESSAGE);
                this.limpiarCampos();
            } else {
                txtId.setText(String.valueOf(elRegistro.getId()));
                txtNombre.setText(elRegistro.getNombre());
                txtApellidos.setText(elRegistro.getApellidos());
                txtProgramacion2.setText(String.valueOf(elRegistro.getProgramacion2()));
                txtCalculo.setText(String.valueOf(elRegistro.getCalculo()));
                txtArte.setText(String.valueOf(elRegistro.getArte()));
                txtAdministracion.setText(String.valueOf(elRegistro.getAdministracion()));
                txtPromedioNotas.setText(String.valueOf(elRegistro.getPromedio()));
            }
            

        }
    }//GEN-LAST:event_btnConsultarCedulaActionPerformed

    private void btnActualizarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarRegistroActionPerformed
         // TODO add your handling code here:
        if (txtCedula.getText().isEmpty() || txtNombre.getText().isEmpty() || txtApellidos.getText().isEmpty() || txtProgramacion2.getText().isEmpty() || txtCalculo.getText().isEmpty() || txtArte.getText().isEmpty() || txtAdministracion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(new JFrame(), "Debe incluir todos los datos", "Datos faltantes", JOptionPane.WARNING_MESSAGE);
        } else {
            Registro miRegistro = new Registro(Integer.parseInt(txtId.getText()), txtCedula.getText(), txtNombre.getText(), txtApellidos.getText(), Integer.parseInt(txtProgramacion2.getText()), Integer.parseInt(txtCalculo.getText()), Integer.parseInt(txtArte.getText()), Integer.parseInt(txtAdministracion.getText()));
            Logica laCapaDeLogica = new Logica();
            if (laCapaDeLogica.actualizarRegistro(miRegistro)) {
                JOptionPane.showMessageDialog(new JFrame(), "Registro actualizado correctamente", "Actualizar registro", JOptionPane.INFORMATION_MESSAGE);
this.limpiarCampos();
this.RefrescarTabla();
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "Registro no actualizado correctamente", "Actualizar registro", JOptionPane.WARNING_MESSAGE);
this.limpiarCampos();
this.RefrescarTabla();
            }
        }       
    }//GEN-LAST:event_btnActualizarRegistroActionPerformed

    private void btnEliminarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarRegistroActionPerformed
        if (txtId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(new JFrame(), "Por favor consulte la cédula a eliminar", "Datos faltantes", JOptionPane.WARNING_MESSAGE);
        } else {
            Logica laCapaDeLogica = new Logica();
            if (laCapaDeLogica.eliminarRegistro(Integer.parseInt(txtId.getText()))) {
                JOptionPane.showMessageDialog(new JFrame(), "El registro se eliminó correctamente", "Eliminar registro", JOptionPane.INFORMATION_MESSAGE);
                this.limpiarCampos();
this.RefrescarTabla();
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "El registro no se eliminó correctamente", "Eliminar registro", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEliminarRegistroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCalificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCalificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCalificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCalificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCalificaciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarRegistro;
    private javax.swing.JButton btnConsultarCedula;
    private javax.swing.JButton btnEliminarRegistro;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JTable dtRegistros;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAdministracion;
    private javax.swing.JLabel lblApellidos;
    private javax.swing.JLabel lblArte;
    private javax.swing.JLabel lblCalculo;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblProgramacion2;
    private javax.swing.JTextField txtAdministracion;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtArte;
    private javax.swing.JTextField txtCalculo;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtProgramacion2;
    private javax.swing.JTextField txtPromedioNotas;
    // End of variables declaration//GEN-END:variables
}
